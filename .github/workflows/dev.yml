name: Docker build, push and deploy to Dev

on:
  workflow_call:
    inputs:
      container-name:
        required: true
        type: string
      version-next:
        required: true
        type: string
      version-sha:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      platforms:
        required: false
        type: string
        #linux/amd64,linux/arm64
        default: linux/amd64
      cancel-in-progress:
        required: false
        type: boolean
        default: true
      pre-command:
        required: false
        type: string
      pull-first:
        required: false
        type: boolean
        default: false
      deployment_tool:
        required: false
        type: string
        default: helm
    secrets:
      iam-role:
        required: true

env:
  IAM_ROLE: ${{ secrets.iam-role }}
  CONTAINER_NAME: ${{ inputs.container-name }}
  DOCKERFILE: ${{ inputs.dockerfile }}
  PLATFORMS: ${{ inputs.platforms }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: build-and-deploy
      cancel-in-progress: ${{ inputs.cancel-in-progress }}
    # These permissions are needed to interact with GitHub's OIDC Token endpoint and to commit kustomize fixes
    permissions:
      id-token: write
      contents: write
    outputs:
      image: ${{ steps.docker_build.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Run Pre-Command
        if: ${{ inputs.pre-command }}
        run: |
          eval "${{ inputs.pre-command }}"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@4831715c8c81dbf2ae795f9e285de2a9ee1150b4

      - name: Build and push
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./${{ env.DOCKERFILE }}
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ env.CONTAINER_NAME }}:${{ env.VERSION_NEXT }}-rc.${{ env.SHA }}
            ${{ steps.login-ecr.outputs.registry }}/${{ env.CONTAINER_NAME }}:${{ env.VERSION_NEXT }}

      #######
      ## Auto-deploy to Dev Environment
      #######

      - name: Setup Kustomize
        if: ${{ inputs.deployment_tool == 'kustomize' }}
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"

      - name: Pull changes
        if: ${{ inputs.pull-first }}
        run: |
          git pull

      - name: Update Kubernetes resources for dev with Kustomize
        if: ${{ inputs.deployment_tool == 'kustomize' }}
        run: |
          cd kubernetes/develop/
          kustomize edit set image ${{ env.CONTAINER_NAME }}=${{ steps.login-ecr.outputs.registry }}/${{ env.CONTAINER_NAME }}:${{ env.VERSION_NEXT }}-rc.${{ env.SHA }}
          cat kustomization.yaml

      - name: Update appVersion in Chart.yaml for Helm
        if: ${{ inputs.deployment_tool == 'helm' }}
        env:
          APP_VERSION: ${{ env.VERSION_NEXT }}-rc.${{ env.SHA }}
        run: |
          cd kubernetes/develop/
          sed -i 's/appVersion:.*$/appVersion: "'$APP_VERSION'"/' Chart.yaml
          cat Chart.yaml

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Bump version
        with:
          commit_message: Auto-deploy to dev (via gitops)
