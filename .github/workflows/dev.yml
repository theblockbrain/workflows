name: Docker build, push and deploy to Dev

on:
  workflow_call:
    inputs:
      container-name:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      cancel-in-progress:
        required: false
        type: boolean
        default: true
      pre-command:
        required: false
        type: string
    secrets:
      iam-role:
        required: true
      

env:
  IAM_ROLE: ${{ secrets.iam-role }}
  CONTAINER_NAME: ${{ inputs.container-name }}
  DOCKERFILE: ${{ inputs.dockerfile }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: build-and-deploy
      cancel-in-progress: ${{ inputs.cancel-in-progress }}
    # These permissions are needed to interact with GitHub's OIDC Token endpoint and to commit kustomize fixes
    permissions:
      id-token: write
      contents: write
    outputs:
      image: ${{ steps.docker_build.outputs.image }}
    steps:    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Pre-Command
        if: ${{ env.PRE_COMMAND }}
        run: |
          eval $PRE_COMMAND
          
      - name: Prepare
        id: prep
        run: |
          BRANCH=${GITHUB_REF##*/}
          TS=$(date +%s)
          REVISION=${GITHUB_SHA::8}
          BUILD_ID="${BRANCH}-${REVISION}-${TS}"
          LATEST_ID=canary
          echo ::set-output name=BUILD_DATE::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=BUILD_ID::${BUILD_ID}
          echo ::set-output name=LATEST_ID::${LATEST_ID}          

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ env.IAM_ROLE }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@4831715c8c81dbf2ae795f9e285de2a9ee1150b4

      - name: Build, tag, and push image to Amazon ECR
        id: docker_build
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.CONTAINER_NAME }}
          DOCKERFILE: ${{ env.DOCKERFILE }}
          BUILD_ID: ${{ steps.prep.outputs.BUILD_ID }}
          LATEST_ID: ${{ steps.prep.outputs.LATEST_ID }}
        run: |
          DOCKER_BUILDKIT=1 docker build -f $DOCKERFILE -t $ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_ID -t $ECR_REGISTRY/$ECR_REPOSITORY:$LATEST_ID .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags  
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$BUILD_ID"   

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.image }}

      #######
      ## Auto-deploy to Dev Environment
      #######

      - name: Setup Kustomize
        uses: imranismail/setup-kustomize@v1
        with:
          kustomize-version: "3.6.1"

      - name: Update Kubernetes resources for dev
        run: |
          cd kubernetes/develop/
          kustomize edit set image ${{ env.CONTAINER_NAME }}=${{ steps.docker_build.outputs.image }}
          cat kustomization.yaml

      - uses: stefanzweifel/git-auto-commit-action@v4
        name: Bump version
        with:
          commit_message: Auto-deploy to dev (via gitops)
